[{"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\index.tsx":"1","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\reportWebVitals.ts":"2","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\App.tsx":"3","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\Router.tsx":"4","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\templates\\GenericTemplate.tsx":"5","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Skil.tsx":"6","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Slider.tsx":"7","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Profile.tsx":"8","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Contact.tsx":"9","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Work.tsx":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":181,"mtime":1612154489262,"results":"14","hashOfConfig":"12"},{"size":745,"mtime":1612332007570,"results":"15","hashOfConfig":"12"},{"size":8078,"mtime":1612331872815,"results":"16","hashOfConfig":"12"},{"size":1995,"mtime":1612317270455,"results":"17","hashOfConfig":"12"},{"size":1685,"mtime":1612232267417,"results":"18","hashOfConfig":"12"},{"size":863,"mtime":1612327553270,"results":"19","hashOfConfig":"12"},{"size":1396,"mtime":1612315519394,"results":"20","hashOfConfig":"12"},{"size":3955,"mtime":1612327696587,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"z4lz74",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\index.tsx",[],["49","50"],"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\reportWebVitals.ts",[],"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\App.tsx",["51"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Router from './Router'\n\n\nfunction App() {\n  return (\n    <Router />\n  );\n}\n\nexport default App;\n","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\Router.tsx",[],"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\templates\\GenericTemplate.tsx",["52","53","54"],"import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport * as colors from \"@material-ui/core/colors\";\r\nimport { makeStyles, createStyles, Theme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport DesktopMacIcon from '@material-ui/icons/DesktopMac';\r\nimport BuildIcon from '@material-ui/icons/Build';\r\nimport ContactMailIcon from '@material-ui/icons/ContactMail';\r\n\r\nimport styles from './GenericTemplate.module.css';\r\n\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Noto Sans JP\",\r\n      \"Lato\",\r\n      \"游ゴシック Medium\",\r\n      \"游ゴシック体\",\r\n      \"Yu Gothic Medium\",\r\n      \"YuGothic\",\r\n      \"ヒラギノ角ゴ ProN\",\r\n      \"Hiragino Kaku Gothic ProN\",\r\n      \"メイリオ\",\r\n      \"Meiryo\",\r\n      \"ＭＳ Ｐゴシック\",\r\n      \"MS PGothic\",\r\n      \"sans-serif\",\r\n    ].join(\",\"),\r\n  },\r\n  palette: {\r\n    primary: { main: colors.blue[800] }, // テーマの色\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: \"flex\",\r\n    },\r\n    toolbar: {\r\n      paddingRight: 24,\r\n    },\r\n    toolbarIcon: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"flex-end\",\r\n      padding: \"0 8px\",\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create([\"width\", \"margin\"], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: \"none\",\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    pageTitle: {\r\n      marginBottom: theme.spacing(1),\r\n    },\r\n    drawerPaper: {\r\n      position: \"relative\",\r\n      whiteSpace: \"nowrap\",\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      overflowX: \"hidden\",\r\n      transition: theme.transitions.create(\"width\", {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      width: theme.spacing(7),\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: theme.spacing(9),\r\n      },\r\n    },\r\n    appBarSpacer: theme.mixins.toolbar,\r\n    content: {\r\n      flexGrow: 1,\r\n      height: \"100vh\",\r\n      overflow: \"auto\",\r\n    },\r\n    container: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      display: \"flex\",\r\n      overflow: \"auto\",\r\n      flexDirection: \"column\",\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  })\r\n);\r\n\r\n\r\n\r\nexport interface GenericTemplateProps {\r\n  children: React.ReactNode;\r\n  title: string;\r\n}\r\n\r\nconst GenericTemplate: React.FC<GenericTemplateProps> = ({\r\n  children,\r\n  title,\r\n}) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  }; \r\n\r\n  const handleClose = () =>{//openの値がtrueだった場合、falseにする\r\n    if(open === true) {\r\n      setOpen(!true)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"absolute\"\r\n          className={clsx(classes.appBar, open && classes.appBarShift)}\r\n        >\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(\r\n                classes.menuButton,\r\n                open && classes.menuButtonHidden\r\n              )}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.title}\r\n            >\r\n              M.J Portfolio\r\n            </Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <Link to=\"/\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <FaceIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"ホーム：プロフィール\" />\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/skil\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <DesktopMacIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"スキル\" />\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/work\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <BuildIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"ワーク\" />\r\n              </ListItem>\r\n            </Link>\r\n\r\n            <Link to=\"/contact\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <ContactMailIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"コンタクト\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content} onClick={handleClose}>{/*メイン画面のどこかがクリックされたときhandleCloseメソッドが実行される*/}\r\n          <div className={classes.appBarSpacer} />\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Typography\r\n              component=\"h2\"\r\n              variant=\"h5\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              className={classes.pageTitle}\r\n            >\r\n              {title}\r\n            </Typography>\r\n            {children}\r\n          </Container>\r\n        </main>\r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default GenericTemplate;",["55","56"],"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Skil.tsx",[],"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Slider.tsx",["57","58","59","60","61","62"],"import React from \"react\";\r\nimport Slider from \"react-slick\"\r\nimport img1 from '../img/test1.jpg';\r\nimport img2 from '../img/test2.jpg';\r\nimport img3 from '../img/test3.jpg';\r\nimport img4 from '../img/test4.jpg';\r\nimport img5 from '../img/test5.jpg';\r\n\r\n \r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nconst createImg = (\r\n  id: number,\r\n  img: string,\r\n) => {\r\n  return {id,img}\r\n};\r\n\r\n// mapでの回し方。画像のインポート（読み込み）が不明でパス\r\n// const imgs =[\r\n//   createImg(1,\"../img/test.jpg\"),\r\n//   createImg(2, \"../img/test2.jpg\")\r\n// ];\r\n \r\nconst TopSlider = () =>  {\r\n    const settings = {\r\n      dots: true,\r\n      infinite: true,\r\n      speed: 500,\r\n      slidesToShow: 1,\r\n      slidesToScroll: 1,\r\n      autoplay : true,\r\n    };\r\n    const style = {\r\n        margin: \"auto\",\r\n        height: 400,\r\n        color: \"#fff\",\r\n        background: \"#3ab60b\",\r\n    };\r\n    return (\r\n      <Slider {...settings}>\r\n        {/* mapでの回し方。画像のインポートが不明でパス\r\n        {imgs.map((img) =>(\r\n          <div key={img.id}>\r\n              <img src={img.img} style={style}></img>\r\n          </div>\r\n        ))} */}\r\n        <div>\r\n          <img src={img1} style={style}></img>\r\n        </div>\r\n        <div>\r\n          <img src={img2} style={style}></img>\r\n        </div>\r\n        <div>\r\n          <img src={img3} style={style}></img>\r\n        </div>\r\n        <div>\r\n          <img src={img4} style={style}></img>\r\n        </div>\r\n        <div>\r\n          <img src={img5} style={style}></img>\r\n        </div>        \r\n      </Slider>\r\n    );\r\n  }\r\n \r\n  export default TopSlider;","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Profile.tsx",[],"C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Contact.tsx",["63","64"],"import React from 'react'\r\nimport GenericTemplate  from '../templates/GenericTemplate';\r\nimport styles from './styles/Contact.module.css';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nconst Contact: React.FC = () => {\r\n    return (\r\n        <GenericTemplate title=\"コンタクト\">\r\n            <div className={styles.box}>\r\n                <div className={styles.github_box}>\r\n                    <a href='https://github.com/hukurou82' target=\"_blank\">\r\n                        <GitHubIcon fontSize='large'/>\r\n                        <div className={styles.github_text}>:Github</div>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className={styles.instagram_box}>\r\n                    <a href = 'https://www.instagram.com/hukurou82/?hl=ja' target=\"_blank\">\r\n                        <InstagramIcon fontSize='large'/>\r\n                        <div className={styles.instagram_text}>:Instagram</div>\r\n                    </a>\r\n                </div>\r\n\r\n                <div className={styles.mail_box}>\r\n                    <EmailIcon fontSize='large'/>\r\n                    <div className={styles.mail_text}>:Sanple_M.J@Sanple.com</div>\r\n                </div>\r\n            </div>\r\n        </GenericTemplate>\r\n    )\r\n}\r\n\r\nexport default Contact;\r\n","C:\\Users\\hukur\\Desktop\\react_start\\my-hp\\src\\components\\pages\\Work.tsx",["65"],"import React from 'react'\r\nimport GenericTemplate  from '../templates/GenericTemplate';\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport styles from './styles/Work.module.css';\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    head: {\r\n      backgroundColor: theme.palette.common.black,\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }),\r\n)(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '&:nth-of-type(odd)': {\r\n        backgroundColor: theme.palette.action.hover,\r\n      },\r\n    },\r\n  }),\r\n)(TableRow);\r\n\r\nconst createData = (\r\n    name: string, \r\n    skil: string, \r\n    fw: string, \r\n    description: string,\r\n    url: string,\r\n) => {\r\n  return { name, skil, fw, description, url};\r\n}\r\n\r\nconst rows = [\r\n  createData('ポートフォリオ','Typescript', 'React、Material-UI','現在見ているポートフォリオ', './Profile'),\r\n  createData('TODOリスト','Javascript', 'React、Bootstrap','Reactを使ったCURD',\"https://hukurou82.github.io/todo/\"),\r\n  createData('チャットbot','Javascript、Firebase、Slack', 'React、Redux、Material-UI','自動でチャットのやり取りをし、細かいやり取りは直接連絡を取れるチャットbot', \"https://chatbot-21dbb.web.app/\"),\r\n  createData('新型コロナウイルスの感染者数チャート','Typescript、Firebase', 'React、Redux、Chrat.js','新型コロナウイルスの感染者数が分かるチャートをChart.jsを使い実装',\"https://covid19-app-bbc7f.web.app/\"),\r\n  createData('映画ランキングサイト','HTML、CSS、jQuery', 'Bootstrap','映画ランキングサイト',\"http://hukurou82.html.xdomain.jp/test3/index.html\"),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\n\r\nconst Work: React.FC = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <GenericTemplate title=\"ワーク\">\r\n            <p>作ってきたサイトです。ポートフォリオ名をクリックしてください。</p>\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>ポートフォリオ</StyledTableCell>\r\n                            <StyledTableCell>スキル</StyledTableCell>\r\n                            <StyledTableCell>フレームワーク</StyledTableCell>\r\n                            <StyledTableCell>説明</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((row) => (\r\n                            <StyledTableRow key={row.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    <a href={row.url} target=\"_blank\" className={styles.a} >{row.name}</a>\r\n                                </StyledTableCell>\r\n                                <StyledTableCell>{row.skil}</StyledTableCell>\r\n                                <StyledTableCell>{row.fw}</StyledTableCell>\r\n                                <StyledTableCell>{row.description}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </GenericTemplate>\r\n    )\r\n}\r\n\r\nexport default Work;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":12},{"ruleId":"70","severity":1,"message":"74","line":19,"column":8,"nodeType":"72","messageId":"73","endLine":19,"endColumn":16},{"ruleId":"70","severity":1,"message":"75","line":20,"column":8,"nodeType":"72","messageId":"73","endLine":20,"endColumn":24},{"ruleId":"70","severity":1,"message":"76","line":29,"column":8,"nodeType":"72","messageId":"73","endLine":29,"endColumn":14},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"70","severity":1,"message":"79","line":13,"column":7,"nodeType":"72","messageId":"73","endLine":13,"endColumn":16},{"ruleId":"80","severity":1,"message":"81","line":50,"column":11,"nodeType":"82","endLine":50,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":53,"column":11,"nodeType":"82","endLine":53,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":56,"column":11,"nodeType":"82","endLine":56,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":59,"column":11,"nodeType":"82","endLine":59,"endColumn":41},{"ruleId":"80","severity":1,"message":"81","line":62,"column":11,"nodeType":"82","endLine":62,"endColumn":41},{"ruleId":"83","severity":1,"message":"84","line":13,"column":21,"nodeType":"82","endLine":13,"endColumn":76},{"ruleId":"83","severity":1,"message":"84","line":20,"column":21,"nodeType":"82","endLine":20,"endColumn":92},{"ruleId":"83","severity":1,"message":"84","line":84,"column":37,"nodeType":"82","endLine":84,"endColumn":93},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'HomeIcon' is defined but never used.","'ShoppingCartIcon' is defined but never used.","'styles' is defined but never used.",["85"],["86"],"'createImg' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation"]